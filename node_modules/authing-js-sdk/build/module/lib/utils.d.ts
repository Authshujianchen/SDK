import { KeyValuePair } from '../types';
import { UdfDataType } from '../types/graphql.v2';
export declare const encrypt: (plainText: string, publicKey: string) => Promise<any>;
export default function buildTree(nodes: any[]): any;
export declare const deepEqual: (x: any, y: any) => boolean;
export declare const popupCenter: (url: string, { w, h }?: {
    w: number;
    h: number;
}) => void;
export declare const createCssClassStyleSheet: (className: string, styleSheet: any) => void;
export declare const serialize: (obj: any) => string;
export declare const objectToQueryString: (queryParameters: {
    [x: string]: string;
}) => string;
export declare const convertUdv: (data: Array<{
    key: string;
    dataType: UdfDataType;
    value: any;
}>) => Array<{
    key: string;
    dataType: UdfDataType;
    value: any;
}>;
export declare const convertUdvToKeyValuePair: (data: Array<{
    key: string;
    dataType: UdfDataType;
    value: any;
}>) => KeyValuePair;
export declare const isWechatBrowser: () => boolean;
export declare const formatAuthorizedResources: (resources: any[]) => any[];
export declare function generateUidKey(number: number): string;
